<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="courseMapper">
	
	<resultMap id="CourseResultSet" type="Course">
		<id property="courseNum" column="course_num"/>
		<result property="categoryName" column="category_name"/>
		<result property="categoryNum" column="category_num"/>
		<result property="creNum" column="cre_num"/>
		<result property="courseTitle" column="course_title"/>
		<result property="courseContent" column="course_content"/>
		<result property="courseKind" column="course_kind"/>
		<result property="courseLevel" column="course_level"/>
		<result property="courseCurrentNum" column="course_current_num"/>
		<result property="courseEnrollDate" column="course_enroll_date"/>
		<result property="courseApprovedDate" column="course_approved_date"/>
		<result property="courseStartDate" column="course_start_date"/>
		<result property="courseEndDate" column="course_end_date"/>
		<result property="courseApproved" column="course_approved"/>
		<result property="courseStatus" column="course_status"/>
		<result property="memNickName" column="mem_nickname"/>	
		
		<discriminator javaType="string" column="course_kind">
     		 <case value="online" resultType="Online">
     		 	<result property="onlineNum" column="online_num"/>
				<result property="coursePrice" column="course_price"/>
				<result property="courseMaterial" column="course_material"/>	
				<result property="courseMaterialPrice" column="course_material_price"/>
				<result property="courseVideoUrl" column="course_video_url"/>
     		 </case>
     		 <case value="offline" resultType="Offline">
     		 	<result property="offlineNum" column="offline_num"/>
     		 	<result property="courseArea" column="course_area"/>
				<result property="courseMinPax" column="course_min_pax"/>
				<result property="courseMaxPax" column="course_max_pax"/>	
				<result property="courseHours" column="course_hours"/>
				<result property="courseHourPrice" column="course_hour_price"/>
				<result property="courseDay" column="course_day"/>
				<result property="courseCount" column="course_count"/>
     		 </case>
   		</discriminator>
	</resultMap>
	
		
	
	
	<resultMap id="CourseAttachmentResultSet" type="CourseAttachment">
		<id property="coaNum" column="coa_num"/>
		<result property="courseNum" column="course_num"/>
		<result property="coaOName" column="coa_oname"/>
		<result property="coaRName" column="coa_rname"/>
		<result property="coaLevel" column="coa_level"/>
		<result property="coaPath" column="coa_path"/>
	</resultMap>
	
	   <resultMap id="LoveResultSet" type="Love">
      <id property="memNum" column="mem_Num"/>
      <result property="courseNum" column="course_num"/>
      <result property="courseTitle" column="course_title"/>
      <result property="creatorName" column="mem_nickname"/>
      <result property="courseKind" column="course_kind"/>
      <result property="coaRName" column="coa_rname"/>
      <result property="wishedDate" column="wished_date"/>   
      <discriminator javaType="string" column="course_kind">
            <case value="offline" resultType="Love" >
               <result property="coursePrice" column="course_hour_price"/>
            
            </case>
            <case value="online" resultType="Love">
               <result property="coursePrice" column="course_price"/>
               
            </case>
         </discriminator>
   </resultMap>
   <resultMap id="ReviewResultSet" type="Review">
      <id property="reviewNum" column="review_num"/>
      <result property="courseNum" column="course_num"/>
      <result property="memNum" column="mem_num"/>
      <result property="reviewContent" column="review_content"/>
      <result property="reviewEnrollDate" column="review_eroll_date"/>
      <result property="reviewModifyDate" column="review_modify_date"/>
      <result property="reviewStatus" column="review_status"/>   
   </resultMap>
   <resultMap id="ReviewAttachmentResultSet" type="ReviewAttachment">
		<id property="raNum" column="ra_num"/>
		<result property="reviewNum" column="review_num"/>
		<result property="revReplyNum" column="rev_reply_num"/>
		<result property="raOName" column="ra_pname"/>
		<result property="raRName" column="ra_rname"/>
		<result property="raPath" column="ra_path"/>
	</resultMap>
	
   <resultMap id="SingleCourseResultSet" type="SingleCourse">
      <id property="courseNum" column="course_num"/>
      <result property="courseTitle" column="course_title"/>
      <result property="categoryName" column="category_name"/>
      <result property="memNickName" column="mem_nickname"/>
      <result property="courseKind" column="course_kind"/>
      <result property="courseLevel" column="course_Level"/>
      <result property="courseEnrollDate" column="course_enroll_date"/>
      <result property="courseStartDate" column="course_start_date"/>   
      <result property="courseEndDate" column="course_end_date"/>
      <result property="coaRName" column="course_rname"/>
      <result property="loveCount" column="love_count"/>
      <discriminator javaType="string" column="course_kind">
            <case value="online" resultType="SingleCourse" >
               <result property="coursePrice" column="course_hour_price"/>
            
            </case>
            <case value="offline" resultType="SingleCourse">
               <result property="coursePrice" column="course_price"/>
               <result property="courseArea" column="courseArea"/>
            </case>
         </discriminator>
   </resultMap>
   
   <resultMap id="TakeCourseResultSet" type="TakeCourse">
		<id property="takeNum" column="take_num"/>
		<result property="memNum" column="mem_num"/>
		<result property="payNum" column="pay_num"/>
		<result property="courseNum" column="course_num"/>
		<result property="courseTitle" column="course_title"/>
		<result property="categoryName" column="category_name"/>
		<result property="memNickname" column="mem_nickname"/>
		<result property="courseKind" column="course_kind"/>
		<result property="courseLevel" column="course_level"/>
		<result property="courseStartDate" column="course_start_date"/>
		<result property="courseEndDate" column="course_end_date"/>
		<result property="coaRname" column="coa_rname"/>
		<result property="coursePrice" column="course_price"/>
		<result property="payPrice" column="pay_price"/>
		<result property="courseArea" column="course_area"/>
		<result property="courseHourPrice" column="course_hour_price"/>
		<result property="courseApproved" column="course_approved"/>
		<result property="takeDate" column="take_date"/>
	</resultMap>
	
	


	<!-- 1. 클래스 추가 쿼리 -->
	<insert id="insertCourse" parameterType="Course">
		insert into course 
		values(course_seq.nextval, #{categoryNum}, #{creNum}, #{courseTitle}, #{courseContent}, 
				#{courseKind}, #{courseLevel}, 0, sysdate, null, #{ courseStartDate }, #{ courseEndDate}, default, default)
	</insert>
	
	<!-- 1. 클래스 추가 실패시 삭제 -->
	<delete id="deleteCourse" parameterType="Course">
		delete course where course_num = #{courseNum}
	</delete>
	
	
	<!-- 1_1. 온라인 클래스 추가 쿼리  -->
	<insert id="insertOnline" parameterType="Online">
		insert into online_course
		values(online_course_seq.nextval, course_seq.currval, #{coursePrice}, #{courseMaterial}, 
				#{courseMaterialPrice}, #{courseVideoUrl})
	</insert>
	
	<insert id="insertOffline" parameterType="Offline">
		insert into offline_course
		values(offline_course_seq.nextval, course_seq.currval,  #{courseArea}, #{courseMinPax}, #{courseMaxPax}, 
				#{courseHours}, #{courseHourPrice}, #{courseDay}, #{courseCount})
	</insert>
	
	
	<!-- 2. 클래스 커버 사진 추가하기  -->
	<insert id="insertCoverImage" parameterType="CourseAttachment">
		insert into course_attachment
		values(course_attachment_seq.nextval, course_seq.currval, #{coaOName}, #{coaRName}, 1, #{coaPath})
	</insert>
	
	<!-- 클래스 상세정보 불러오기 -->
	<select id="selectCourse" parameterType="_int" resultMap="CourseResultSet">
		select *
		from course 
		join category using(category_num)
		where course_num = #{courseNum}
	</select>
	
	<!-- 온라인 클래스 불러오기 by creNum-->
	<select id="selectMyOnlineList" parameterType="_int" resultMap="CourseResultSet">
		select * 
		from course
		join online_course using(course_num)
		where cre_num = #{creNum} 
		and course_approved = 'Y'
		and course_status='Y'
		order by course_num desc
	</select>
	
	<!-- 오프라인 클래스 불러오기  by creNum-->
	<select id="selectMyOfflineList" parameterType="_int" resultMap="CourseResultSet">
		select * 
		from course
		join offline_course using(course_num)
		where cre_num = #{creNum} 
		and course_approved = 'Y'
		and course_status='Y'
		order by course_num desc
	</select>
	
	<!-- 클래스 메인 커버리스트 가져오기  -->
	<select id="selectCoverList" parameterType="_int" resultMap="CourseAttachmentResultSet">
		select coa_num, course_num, coa_oname, coa_rname, coa_level, coa_path
		from course_attachment 
		join course using(course_num)
		where cre_num = #{creNum}
		and course_approved = 'Y'
		and course_status='Y'
		and coa_level = 1
	</select>
	
	<select id="selectCover" parameterType="_int" resultMap="CourseAttachmentResultSet">
		select *
		from course_attachment
		where course_num = #{courseNum}
		and coa_level = 1
	</select>

	<select id="awaitCourseList" resultMap="SingleCourseResultSet">
		select *
		from single_course_view
		where course_approved = 'N'
	</select>
	
	<!-- 온라인 클래스 상세보기 불러오기 by courseNum -->
	<select id="selectOnline" parameterType="_int" resultMap="CourseResultSet">
		select *
		from course
		join online_course using(course_num)
		join category using (category_num)
		where course_num = #{courseNum}
	</select>
	<!-- 오프라인 클래스 상세보기 불러오기 by courseNum -->
	<select id="selectOffline" parameterType="_int" resultMap="CourseResultSet">
		select *
		from course
		join offline_course using(course_num)
		join category using (category_num)
		where course_num = #{courseNum}
	</select>
	 
	<select id="selectCourseAttachmentList" parameterType="CourseAttachment" resultMap="CourseAttachmentResultSet">
		select *
		from course_attachment
		where course_num = #{courseNum}
		and coa_Level = 1
	</select>
	
	<update id="allowCourse" parameterType="_int">
		update course
		set course_approved_date=sysdate, course_approved='Y'
		where course_num = #{courseNum}
	</update>
	
	<update id="rejectCourse" parameterType="_int">
		update course
		set course_approved_date=sysdate, course_approved='R'
		where course_num = #{courseNum}
	</update>
	
	
	<select id="selectList" resultMap="SingleCourseResultSet">
		select *
		from single_course_view
		where course_approved = 'Y'
	</select>

	<!-- 1. 페이지처리 구문 -->
	<select id="getListCount" resultType="_int">
		select count(*)
		from love_view
	</select>
	
	<select id="modalsearchList" parameterType="String" resultMap="CourseResultSet">
			select c.course_num, category.category_name, cre_num, c.course_title, c.course_content, c.course_kind, 
                c.course_level, c.course_current_num, c.course_enroll_date, c.course_approved_date, c.course_start_date,
                c.course_end_date, c.course_approved, c.course_status, member.mem_nickname
			from course c
	        join category using (category_num)
	        join creator using(cre_num)
	        join member using(mem_num)
			where course_title like '%'||#{search}||'%'
            
            UNION
            
			select c.course_num, category.category_name, cre_num, c.course_title, c.course_content, c.course_kind, 
                c.course_level, c.course_current_num, c.course_enroll_date, c.course_approved_date, c.course_start_date,
                c.course_end_date, c.course_approved, c.course_status, member.mem_nickname
			from course c
	        join category using (category_num)
	        join creator using(cre_num)
	        join member using(mem_num)
			where mem_nickname like '%'||#{search}||'%'
            
            UNION
            
			select c.course_num, category.category_name, cre_num, c.course_title, c.course_content, c.course_kind, 
                c.course_level, c.course_current_num, c.course_enroll_date, c.course_approved_date, c.course_start_date,
                c.course_end_date, c.course_approved, c.course_status, member.mem_nickname
			from course c
	        join category using (category_num)
	        join creator using(cre_num)
	        join member using(mem_num)
			where category_name like '%'||#{search}||'%'
	</select>
	
	<select id="modalsearchCategory" parameterType="_int" resultMap="CourseResultSet">
			select c.course_num, category.category_name, cre_num, c.course_title, c.course_content, c.course_kind, 
                c.course_level, c.course_current_num, c.course_enroll_date, c.course_approved_date, c.course_start_date,
                c.course_end_date, c.course_approved, c.course_status, member.mem_nickname
			from course c
	        join category using (category_num)
	        join creator using(cre_num)
	        join member using(mem_num)
			where category_num = #{categoryNum} and course_approved='Y'
	</select>
	
	<!-- 찜하기  -->
 	<select id="selectLove" resultMap="LoveResultSet">
   select *
   from love_view
   where mem_num = #{memNum}
   </select>
   
   <!-- 찜하기 리스트 삭제 -->
	<delete id="deleteLove" parameterType="Love">
		delete from love
		where mem_num = #{memNum}
		and course_num = #{courseNum}
	</delete>
	
	<!-- 온라인 클래스만 리스트 보여주기 -->
	<select id="payonList" resultMap="TakeCourseResultSet">
	select *
	from user_course_view
	where course_kind = 'online'
	</select>
	
	<!-- 오프라인 클래스만 리스트 보여주기 -->
	<select id="payoffList" resultMap="TakeCourseResultSet">
	select *
	from user_course_view
	where course_kind = 'offline'
	</select>
   
	
 <!-- 온라인 클래스 상세보기 불러오기 by courseNum -->
	<select id="selectOnlinePayment" parameterType="_int">
		select *      
		from payment 
        join course using(course_num)
		join online_course using(course_num)
		join category using (category_num)
		where course_num = #{courseNum}
	</select>
	<!-- 오프라인 클래스 상세보기 불러오기 by courseNum -->
	<select id="selectOfflinePayment" parameterType="_int" >
		select *      
		from payment 
        join course using(course_num)
		join online_course using(course_num)
		join category using (category_num)
		where course_num = #{courseNum}
	</select>
	<select id="checkLove" parameterType="Love" resultType="_int">
		select count(*)
		from love
		where  course_num = #{courseNum} and mem_num=#{memNum}
	</select>
	<insert id="insertLove"  parameterType="Love">
		insert into love 
		values(#{memNum},#{courseNum},default)
	</insert>
	<delete id="cancelLove" parameterType="Love">
		delete from love
    	where mem_num=#{memNum} and course_num=#{courseNum}
	</delete>
	
	<select id="selectRlist" resultMap="ReviewResultSet">
		select * from review
        where review_status='Y' and course_num=#{courseNum}
	</select>
	
	<select id="countLove" parameterType="_int" resultType="_int">
		select count(*)
		from love_count_view
		where course_num = #{courseNum}
	</select>
	
	
</mapper>
